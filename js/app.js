// Generated by CoffeeScript 1.9.0
var IStorage, QLocalStorage,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

IStorage = (function() {
  function IStorage() {
    this.initStorage();
  }

  IStorage.prototype.initStorage = function() {
    throw false;
  };

  IStorage.prototype.get = function(key) {
    throw false;
  };

  IStorage.prototype.set = function(key, val) {
    throw false;
  };

  IStorage.prototype["delete"] = function(key) {
    throw false;
  };

  IStorage.prototype.getStorage = function() {
    throw false;
  };

  return IStorage;

})();

QLocalStorage = (function(_super) {
  __extends(QLocalStorage, _super);

  function QLocalStorage() {
    return QLocalStorage.__super__.constructor.apply(this, arguments);
  }

  QLocalStorage.prototype.storage = null;

  QLocalStorage.prototype.initStorage = function() {
    var error;
    try {
      this.storage = localStorage;
    } catch (_error) {
      error = _error;
      console.log(error);
    }
    return null;
  };

  QLocalStorage.prototype.getStorage = function() {
    return this.storage;
  };

  QLocalStorage.prototype.get = function(key) {
    return this.storage.getItem(key);
  };

  QLocalStorage.prototype.set = function(key, val) {
    this.storage.setItem(key, val);
    return null;
  };

  QLocalStorage.prototype["delete"] = function(key) {
    this.storage.removeItem(key);
    return null;
  };

  return QLocalStorage;

})(IStorage);

$(function() {
  var qLocalStorage;
  qLocalStorage = new QLocalStorage();
  qLocalStorage.set('k1', 'v1');
  console.log(qLocalStorage.get('k1'));
  qLocalStorage["delete"]('k1');
  console.log(qLocalStorage.getStorage());
});
